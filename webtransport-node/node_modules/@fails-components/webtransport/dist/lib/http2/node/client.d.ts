/// <reference types="node" />
export class Http2WebTransportClient {
    /**
     * @param {import('../../types.js').NativeClientOptions} args
     */
    constructor(args: import('../../types.js').NativeClientOptions);
    port: number;
    hostname: string;
    serverCertificateHashes: import("../../dom.js").WebTransportHash[];
    protocols: string[];
    localPort: number | undefined;
    allowPooling: boolean;
    forceIpv6: boolean;
    initialStreamFlowControlWindow: number;
    initialSessionFlowControlWindow: number;
    initialBidirectionalStreams: number;
    initialUnidirectionalStreams: number;
    streamShouldAutoTuneReceiveWindow: true;
    streamFlowControlWindowSizeLimit: number;
    sessionShouldAutoTuneReceiveWindow: true;
    sessionFlowControlWindowSizeLimit: number;
    /** @type {import('../../session.js').HttpClient} */
    jsobj: import('../../session.js').HttpClient;
    createTransport(): void;
    clientInt: import("http2").ClientHttp2Session | undefined;
    /**
     * @param {string} path
     */
    openWTSession(path: string): void;
    closeClient(): void;
}
//# sourceMappingURL=client.d.ts.map